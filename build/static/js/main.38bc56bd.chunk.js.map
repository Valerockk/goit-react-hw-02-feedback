{"version":3,"sources":["Components/Sections/Sections.js","Components/FeedbackOptions/FeedbackOptions.js","Components/Notification/Notification.js","Components/Statistics/Statistics.js","Components/App.js","index.js"],"names":["Section","title","children","prototype","PropTypes","string","isRequired","object","FeedbackOptions","onLeaveFeedback","type","name","onClick","func","Notification","message","Statistics","good","neutral","bad","total","positivePercentage","number","App","state","countPositiveFeedbackPercentage","toFixed","countTotalFeedback","handleChange","e","target","setState","this","options","Component","ReactDOM","render","document","getElementById"],"mappings":"2OAGMA,EAAU,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAV,OACd,iCACE,4BAAKD,GACJC,IAILF,EAAQG,UAAY,CAClBF,MAAOG,IAAUC,OAAOC,WACxBJ,SAAUE,IAAUG,OAAOD,YAGdN,QCZTQ,EAAkB,SAAC,GAAD,IAAGC,EAAH,EAAGA,gBAAH,OACtB,6BACE,4BAAQC,KAAK,SAASC,KAAK,OAAOC,QAASH,GAA3C,QAGA,4BAAQC,KAAK,SAASC,KAAK,UAAUC,QAASH,GAA9C,WAGA,4BAAQC,KAAK,SAASC,KAAK,MAAMC,QAASH,GAA1C,SAMJD,EAAgBL,UAAY,CAC1BM,gBAAiBL,IAAUS,KAAKP,YAGnBE,QClBTM,EAAe,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OAAiB,2BAAIA,IAE1CD,EAAaX,UAAY,CACvBY,QAASX,IAAUC,OAAOC,YAGbQ,QCLTE,EAAa,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,QAASC,EAAlB,EAAkBA,IAAKC,EAAvB,EAAuBA,MAAOC,EAA9B,EAA8BA,mBAA9B,OACjB,6BACE,0CACEJ,GAASC,GAAYC,EAGrB,6BACE,oCAAUF,GACV,uCAAaC,GACb,mCAASC,GACT,qCAAWC,GACX,iDAAuBC,EAAvB,OAPF,kBAAC,EAAD,CAAcN,QAAQ,wBAa5BC,EAAWb,UAAY,CACrBc,KAAMb,IAAUkB,OAAOhB,WACvBY,QAASd,IAAUkB,OAAOhB,WAC1Ba,IAAKf,IAAUkB,OAAOhB,WACtBc,MAAOhB,IAAUkB,OAAOhB,WACxBe,mBAAoBjB,IAAUkB,OAAOhB,YAGxBU,QCxBMO,E,4MACnBC,MAAQ,CACNP,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPM,gCAAkC,SAACL,GAGjC,OAAgB,IAFC,EAAKI,MAAdP,KAEeG,GAAOM,QAAQ,I,EAGxCC,mBAAqB,WAAO,IAAD,EACM,EAAKH,MAEpC,OAHyB,EACjBP,KADiB,EACXC,QADW,EACFC,K,EAKzBS,aAAe,SAACC,GAAO,IACblB,EAASkB,EAAEC,OAAXnB,KACR,EAAKoB,SAAL,eACGpB,EAAQ,EAAKa,MAAMb,IAAS,IAE/B,EAAKgB,qBACL,EAAKF,mC,uDAGG,IAAD,EACwBO,KAAKR,MAA5BP,EADD,EACCA,KAAMC,EADP,EACOA,QAASC,EADhB,EACgBA,IAEjBC,EAAQY,KAAKL,qBACbN,EAAqBW,KAAKP,gCAAgCL,GAEhE,OACE,6BACE,kBAAC,EAAD,CAASnB,MAAO,yBACd,kBAAC,EAAD,CACEgC,QAASD,KAAKR,MACdf,gBAAiBuB,KAAKJ,eAGxB,kBAAC,EAAD,CACEX,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOA,EACPC,mBAAoBA,U,GA/CCa,aCDjCC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.38bc56bd.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Section = ({ title, children }) => (\n  <section>\n    <h2>{title}</h2>\n    {children}\n  </section>\n);\n\nSection.prototype = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.object.isRequired,\n};\n\nexport default Section;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst FeedbackOptions = ({ onLeaveFeedback }) => (\n  <div>\n    <button type=\"button\" name=\"good\" onClick={onLeaveFeedback}>\n      Good\n    </button>\n    <button type=\"button\" name=\"neutral\" onClick={onLeaveFeedback}>\n      Neutral\n    </button>\n    <button type=\"button\" name=\"bad\" onClick={onLeaveFeedback}>\n      Bad\n    </button>\n  </div>\n);\n\nFeedbackOptions.prototype = {\n  onLeaveFeedback: PropTypes.func.isRequired,\n};\n\nexport default FeedbackOptions;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Notification = ({ message }) => <p>{message}</p>;\n\nNotification.prototype = {\n  message: PropTypes.string.isRequired,\n};\n\nexport default Notification;\n","import React from \"react\";\nimport Notification from \"../Notification/Notification\";\nimport PropTypes from \"prop-types\";\n\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => (\n  <div>\n    <h2>Statistics</h2>\n    {!good && !neutral && !bad ? (\n      <Notification message=\"No feedback given\"></Notification>\n    ) : (\n      <div>\n        <p>Good: {good}</p>\n        <p>Neutral: {neutral}</p>\n        <p>Bad: {bad}</p>\n        <p>Total: {total}</p>\n        <p>Positive feedback: {positivePercentage} %</p>\n      </div>\n    )}\n  </div>\n);\n\nStatistics.prototype = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  positivePercentage: PropTypes.number.isRequired,\n};\n\nexport default Statistics;\n","import React, { Component } from \"react\";\nimport Section from \"./Sections/Sections\";\nimport FeedBackOptions from \"./FeedbackOptions/FeedbackOptions\";\nimport Statistics from \"./Statistics/Statistics\";\n\nexport default class App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  countPositiveFeedbackPercentage = (total) => {\n    const { good } = this.state;\n\n    return ((good * 100) / total).toFixed(0);\n  };\n\n  countTotalFeedback = () => {\n    const { good, neutral, bad } = this.state;\n\n    return good + neutral + bad;\n  };\n\n  handleChange = (e) => {\n    const { name } = e.target;\n    this.setState({\n      [name]: (this.state[name] += 1),\n    });\n    this.countTotalFeedback();\n    this.countPositiveFeedbackPercentage();\n  };\n\n  render() {\n    const { good, neutral, bad } = this.state;\n\n    const total = this.countTotalFeedback();\n    const positivePercentage = this.countPositiveFeedbackPercentage(total);\n\n    return (\n      <div>\n        <Section title={\"Please leave feedback\"}>\n          <FeedBackOptions\n            options={this.state}\n            onLeaveFeedback={this.handleChange}\n          />\n\n          <Statistics\n            good={good}\n            neutral={neutral}\n            bad={bad}\n            total={total}\n            positivePercentage={positivePercentage}\n          />\n        </Section>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./Components/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}